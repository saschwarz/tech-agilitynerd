<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>tech.agilitynerd - bootstrap</title><link href="https://tech.agilitynerd.com/" rel="alternate"></link><link href="https://tech.agilitynerd.com/feeds/tag.bootstrap.atom.xml" rel="self"></link><id>https://tech.agilitynerd.com/</id><updated>2017-01-10T13:00:00-06:00</updated><entry><title>Django Shrink The Web django-stw 1.0 Released</title><link href="https://tech.agilitynerd.com/django-shrink-the-web-10-released.html" rel="alternate"></link><published>2017-01-10T13:00:00-06:00</published><updated>2017-01-10T13:00:00-06:00</updated><author><name>Steve Schwarz</name></author><id>tag:tech.agilitynerd.com,2017-01-10:/django-shrink-the-web-10-released.html</id><summary type="html">&lt;p&gt;It has been several years since I've worked on my &lt;a class="reference external" href="https://www.djangoproject.com/"&gt;Django&lt;/a&gt; driven website that uses &lt;a class="reference external" href="http://www.shrinktheweb.com/"&gt;Shrink The Web&lt;/a&gt; (STW) screen shots.
During that time STW has simplified their feature set and their API.&lt;/p&gt;
&lt;p&gt;As I upgraded my site (&lt;a class="reference external" href="https://www.googility.com/"&gt;Googility.com&lt;/a&gt;) I took
some time to modernize the &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;django-stw&lt;/span&gt;&lt;/tt&gt; template tag …&lt;/p&gt;</summary><content type="html">&lt;p&gt;It has been several years since I've worked on my &lt;a class="reference external" href="https://www.djangoproject.com/"&gt;Django&lt;/a&gt; driven website that uses &lt;a class="reference external" href="http://www.shrinktheweb.com/"&gt;Shrink The Web&lt;/a&gt; (STW) screen shots.
During that time STW has simplified their feature set and their API.&lt;/p&gt;
&lt;p&gt;As I upgraded my site (&lt;a class="reference external" href="https://www.googility.com/"&gt;Googility.com&lt;/a&gt;) I took
some time to modernize the &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;django-stw&lt;/span&gt;&lt;/tt&gt; template tag and support API changes for the latest Django and Python versions.&lt;/p&gt;
&lt;p&gt;I also tested the package when deployed using HTTP and HTTPS.&lt;/p&gt;
&lt;p&gt;Here are the changes (from the &lt;a class="reference external" href="https://github.com/saschwarz/django-stw/blob/master/CHANGELOG.txt"&gt;CHANGELOG.txt&lt;/a&gt;):&lt;/p&gt;
&lt;pre class="literal-block"&gt;
1.0.1 Use https for all requests to shrinktheweb.com
- Stops browser warnings when used on https websites while not interferring with sites running on http.

1.0.0 Updates for Django 1.9/1.10 and Python 2.7/3.5
- Old versions of Django/Python are no longer supported.
- Removed ``shrinkthewebimage`` template tag since there is no longer an API distinction between free and Pro accounts.
&lt;/pre&gt;
&lt;p&gt;You can the template tag in action on this &lt;a class="reference external" href="https://www.googility.com/django-stw/"&gt;demo page&lt;/a&gt; in a nicer &lt;a class="reference external" href="http://getbootstrap.com/"&gt;&amp;quot;Bootstrap-ified&amp;quot;&lt;/a&gt; UI:&lt;/p&gt;
&lt;div class="thumbnail figure"&gt;
&lt;img alt="Screenshot of first slide of my presentation" src="https://tech.agilitynerd.com/images/DjangoSTWDemoScreenshot.png" /&gt;
&lt;/div&gt;
&lt;p&gt;The latest package is &lt;a class="reference external" href="http://pypi.python.org/pypi?:action=display&amp;amp;name=django-stw"&gt;available on PyPi&lt;/a&gt;:&lt;/p&gt;
&lt;pre class="code python literal-block"&gt;
&lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;django&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;stw&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;Or as a &lt;a class="reference external" href="https://github.com/saschwarz/django-stw/releases"&gt;source download on github&lt;/a&gt;, or via &lt;a class="reference external" href="https://github.com/saschwarz/django-stw"&gt;git clone&lt;/a&gt;.&lt;/p&gt;
</content><category term="django"></category><category term="shrinktheweb"></category><category term="python"></category><category term="images"></category><category term="bootstrap"></category></entry><entry><title>Moved To Pelican</title><link href="https://tech.agilitynerd.com/moved-to-pelican.html" rel="alternate"></link><published>2013-03-17T12:00:00-05:00</published><updated>2013-03-17T12:00:00-05:00</updated><author><name>Steve Schwarz</name></author><id>tag:tech.agilitynerd.com,2013-03-17:/moved-to-pelican.html</id><summary type="html">&lt;p&gt;Way back in 2004, when the content in this blog was a category in the main &lt;a class="reference external" href="http://agilitynerd.com"&gt;AglityNerd blog&lt;/a&gt;, I used the Perl &lt;a class="reference external" href="http://blosxom.sourceforge.net/"&gt;Blosxom&lt;/a&gt; application to serve the blog. When my dog agility readers complained/were confused by the sprinkling of tech postings I split off tech.agilitynerd in another Blosxom …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Way back in 2004, when the content in this blog was a category in the main &lt;a class="reference external" href="http://agilitynerd.com"&gt;AglityNerd blog&lt;/a&gt;, I used the Perl &lt;a class="reference external" href="http://blosxom.sourceforge.net/"&gt;Blosxom&lt;/a&gt; application to serve the blog. When my dog agility readers complained/were confused by the sprinkling of tech postings I split off tech.agilitynerd in another Blosxom instance.&lt;/p&gt;
&lt;p&gt;Once modern web hosted blogs came in to existence I wanted to see how they worked and moved the tech content to &lt;a class="reference external" href="http://posterous.com"&gt;posterous&lt;/a&gt;. That was only OK, the source code formatting was painful but it did support email and web based content creation. I was reasonably content, not bugged enough to move again.&lt;/p&gt;
&lt;p&gt;Then posterous announced &lt;a class="reference external" href="http://blog.posterous.com/thanks-from-posterous"&gt;it is closing on April 30&lt;/a&gt; so I finally had to do something. This site really only needs a few features:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;easy format in which to write content&lt;/li&gt;
&lt;li&gt;source code formatting&lt;/li&gt;
&lt;li&gt;Atom/RSS feeds&lt;/li&gt;
&lt;li&gt;comments&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I use Disqus for comments on my other sites so that meant I could go with a statically generated site. Also since I primarily code in Python I wanted a platform to which I could contribute. I came across &lt;a class="reference external" href="http://blog.getpelican.com/"&gt;Pelican&lt;/a&gt; and it fit the bill nicely.&lt;/p&gt;
&lt;p&gt;I exported the posterous posts, imported them through a temporary wordpress.com site using their posterous importer and finally re-exported them in wordpress format. After a quick bug fix to the pelican wordpress importer I had reStructured Text files for each post. After a few days of editing the embeded source code in the content files and fixing long broken links, I had the blog running and not looking bad at all.&lt;/p&gt;
&lt;p&gt;I wanted a Twitter Bootstrap based responsive layout and I found &lt;a class="reference external" href="https://github.com/azizmb/pelican-bootstrap-responsive-theme"&gt;azizmb's pelican-bootstrap-responsive-them&lt;/a&gt; which had a very pleasing layout. I tweaked it to have category and tag feeds and some other enhancements to get what you see today. I will see if Aziz is interested in pulling any of my changes back.&lt;/p&gt;
&lt;p&gt;So far I like using Pelican and I've made the &lt;a class="reference external" href="https://github.com/saschwarz/tech-agilitynerd"&gt;content of the blog&lt;/a&gt; and my &lt;a class="reference external" href="https://github.com/saschwarz/pelican-bootstrap-responsive-theme"&gt;edits to the theme&lt;/a&gt; available on github in case anyone is interested.&lt;/p&gt;
</content><category term="posterous"></category><category term="pelican"></category><category term="blosxom"></category><category term="bootstrap"></category></entry></feed>